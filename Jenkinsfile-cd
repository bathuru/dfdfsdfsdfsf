pipeline {
    agent { label 'docker-maven-slave' } 
    triggers {
          pollSCM('4 4 4 * *')
    }
    environment {
          VER_NUM = "1.0.${BUILD_NUMBER}";
          REL_NUM = "1.0.${BUILD_NUMBER}.RELEASE";
          mavenHome =  tool name: "maven", type: "maven"
          namespace = "default"
     }
    tools{
          maven 'maven'
     }
    stages {
   
     stage('Deploy Into DEV') {
       steps {   
           sh "pwd"
           sshagent(['aws-ap-south-pem']) {
               sh "ssh -o StrictHostKeyChecking=no ec2-user@docker.bathur.xyz  sudo docker rm -f  devops-simpleapp || true"
               //sh "ssh -o StrictHostKeyChecking=no ec2-user@docker.bathur.xyz  sudo docker run  -d -p 80:8080 --name simpleapp bathurudocker/devops-simpleapp:${VER_NUM}"
              sh "ssh -o StrictHostKeyChecking=no ec2-user@docker.bathur.xyz  sudo docker run  -d -p 80:8080 --name devops-simpleapp bathurudocker/devops-simpleapp:latest"
          }
       }
     }     
/*
         stage('Deploy Into TEST') {
             steps {  
           sh "pwd"
           sshagent(['aws-ap-south-pem']) {
               sh "scp -o StrictHostKeyChecking=no simpleapp-deploy.yaml  simpleapp-ingress-rules.yaml  simpleapp-playbook-k8s.yml ec2-user@ansible.bathur.xyz:/home/ec2-user/"
               sh "ssh -o StrictHostKeyChecking=no ec2-user@ansible.bathur.xyz   ansible-playbook  -i /etc/ansible/hosts /home/ec2-user/simpleapp-playbook-k8s.yml"
          }
        }
     } 
     */
     	  stage ('Deploy Into PROD - Helm Charts')  {
	      steps {
           sh "helm version"
           dir("iwayq-web-app"){
                    sh 'pwd'
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@k8s-bootstrap.bathur.xyz   sudo helm repo add simpleapp-helm  https://bathuru.jfrog.io/artifactory/simpleapp-helm --username srinivas.bathuru@gmail.com  --password AP8d6ghvZSZjJBDbmqjqwz12opx"
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@k8s-bootstrap.bathur.xyz   sudo helm repo update"
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@k8s-bootstrap.bathur.xyz   sudo helm upgrade simpleapp-helm  --install  --force ."

                    //sh "sudo helm repo add simpleapp-helm  https://bathuru.jfrog.io/artifactory/simpleapp-helm --username srinivas.bathuru@gmail.com  --password AP8d6ghvZSZjJBDbmqjqwz12opx"
                    //sh "sudo helm repo update"
                    //sh "sudo helm upgrade simpleapp-helm  --install --namespace ${namespace}  --force ."
                    //sh "sudo helm list -a --namespace ${namespace}"
                }
        }
      }

    }
    post {
           success {
                echo 'Pipeline Sucessfully Finished'
 /*               mail bcc: '', 
                body: """ Hi Team, 
                Your project Build and Deployed successfully.

Please find the details as below,
	   Job Name: ${env.JOB_NAME}
	   Job URL : ${env.JOB_URL}
      Build Number: ${env.BUILD_NUMBER} 
      Build URL: ${env.BUILD_URL}

Thanks
DevOps Team""", 
                          cc: '', 
                          from: '', 
                          replyTo: '', 
                          subject: "${env.JOB_NAME} - Build # ${env.BUILD_NUMBER} - Sucess !!!", 
                          to: 'srinivas.bathuru@gmail.com'  */
           }
           failure {
                echo 'Pipeline Failure'
           }

/*
           always {
emailext attachLog: true, 
 body: '''Hi Team, 
	   
Your project Build and Deployed successfully.

Please find the details as below,
	   Job Name: $PROJECT_NAME 
	   Job URL : $BUILD_URL
       Build Number : $BUILD_NUMBER
       Build Status : $BUILD_STATUS
	   
Thanks
DevOps Team 2''', 
     subject: '$BUILD_STATUS - $PROJECT_NAME - Build # $BUILD_NUMBER ', 
             to: 'srinivas.bathuru@gmail.com'
           }  */
    }
}
